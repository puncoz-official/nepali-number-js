name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: [16, 18, 20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Get Bun cache directory
        id: bun-cache-dir
        shell: bash
        run: |
          echo "dir=$(bun pm cache)" >> $GITHUB_OUTPUT

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.bun-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type check
        run: bun run type-check
        continue-on-error: false

      - name: Run tests
        run: bun run test

      - name: Run build
        run: bun run build

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '22'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          file: ./coverage/lcov.info

  test-package:
    name: Test Package Installation
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build package
        run: bun run build

      - name: Pack package
        run: npm pack

      - name: Create test directory
        run: mkdir test-install && cd test-install

      - name: Initialize test package
        run: |
          cd test-install
          npm init -y
          npm install ../nepali-number-*.tgz

      - name: Test package import
        run: |
          cd test-install
          node -e "
            const { toNepali, toEnglish, formatNepaliNumber } = require('nepali-number');
            console.log('Testing package...');
            console.log('toNepali(123):', toNepali(123));
            console.log('toEnglish(\"१२३\"):', toEnglish('१२३'));
            console.log('formatNepaliNumber(1234567):', formatNepaliNumber(1234567));
            console.log('Package test successful!');
          "
